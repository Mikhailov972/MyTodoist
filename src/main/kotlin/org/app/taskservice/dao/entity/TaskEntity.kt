package org.app.taskservice.dao.entity

import jakarta.persistence.CascadeType
import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.GeneratedValue
import jakarta.persistence.GenerationType
import jakarta.persistence.Id
import jakarta.persistence.JoinColumn
import jakarta.persistence.JoinTable
import jakarta.persistence.ManyToMany
import jakarta.persistence.ManyToOne
import jakarta.persistence.OneToMany
import jakarta.persistence.Table
import java.time.LocalDateTime
import java.util.UUID

@Entity
@Table(name = "tasks")
class TaskEntity(
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    @Column(name = "id")
    val id: UUID? = null,
    @Column(name = "title")
    var title: String,
    @Column(name = "description")
    var description: String? = null,
    @Column(name = "start_date")
    var startDate: LocalDateTime? = null,
    @Column(name = "end_date")
    var endDate: LocalDateTime? = null,

    @ManyToOne
    @JoinColumn(name = "parent_id")
    var parent: TaskEntity? = null,

    @OneToMany(mappedBy = "parent", cascade = [CascadeType.ALL], orphanRemoval = true)
    var subTasks: List<TaskEntity> = emptyList(),

    @ManyToOne
    @JoinColumn(name = "partition_id")
    var partition: PartitionEntity? = null,

    @Column(name = "labels")
    @ManyToMany
    @JoinTable(
        name = "tasks_labels",
        joinColumns = [JoinColumn(name = "task_id")],
        inverseJoinColumns = [JoinColumn(name = "label_id")]
    )
    var labels: List<LabelEntity>,

    @Column(name = "completed")
    var completed: Boolean
) {
    constructor() : this(null, "", null, null, null, null, emptyList(), null, mutableListOf(), false)

    fun setId(value: UUID) {
        throw UnsupportedOperationException("ID is autogenerated and cannot be changed")
    }
}

